*&---------------------------------------------------------------------*
*& Report ZHSRB0232
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZHSRB0232.

TYPES : BEGIN OF TS_INFO ,
  CARRID TYPE SFLIGHT-CARRID,
  CONNID TYPE SFLIGHT-CONNID,
  FLDATE TYPE SFLIGHT-FLDATE,
  PRICE TYPE SFLIGHT-PRICE,
  CURRENCY TYPE SFLIGHT-CURRENCY,
  MEMO TYPE C LENGTH 40,
  SMOKER TYPE C,
  STATUS TYPE C LENGTH 4,

 END OF TS_INFO.
**
**  TYPES : TT_INFO TYPE STANDARD TABLE OF TS_INFO.
**
** DATA : GS_INFO TYPE TS_INFO,
**        GT_INFO TYPE TT_INFO.
**
**
** GS_INFO-CARRID = 'AA'.
** GS_INFO-CONNID = '17'.
** GS_INFO-FLDATE = '20210101'.
** GS_INFO-PRICE = '100'.
** GS_INFO-CURRENCY = 'USD'.
** GS_INFO-MEMO = 'BUSINESS CLASS'.
** GS_INFO-SMOKER = 'N'.
** GS_INFO-STATUS = 'GRE'.
** APPEND GS_INFO TO GT_INFO.
** CLEAR GS_INFO.
**
** GS_INFO-CARRID = 'AZ'.
** GS_INFO-CONNID = '64'.
** GS_INFO-FLDATE = '20210201'.
** GS_INFO-PRICE = '70'.
** GS_INFO-CURRENCY = 'USD'.
** GS_INFO-MEMO = 'ECONOMY CLASS'.
** GS_INFO-SMOKER = 'N'.
** GS_INFO-STATUS = 'YEL'.
** APPEND GS_INFO TO GT_INFO.
** CLEAR GS_INFO.
**
** GS_INFO-CARRID = 'LH'.
** GS_INFO-CONNID = '77'.
** GS_INFO-FLDATE = '20210301'.
** GS_INFO-PRICE = '120'.
** GS_INFO-CURRENCY = 'USD'.
** GS_INFO-MEMO = 'BUSINESS CLASS'.
** GS_INFO-SMOKER = 'Y'.
** GS_INFO-STATUS = 'GRE'.
** APPEND GS_INFO TO GT_INFO.
** CLEAR GS_INFO.
**
** GS_INFO-CARRID = 'UA'.
** GS_INFO-CONNID = '99'.
** GS_INFO-FLDATE = '20210401'.
** GS_INFO-PRICE = '150'.
** GS_INFO-CURRENCY = 'USD'.
** GS_INFO-MEMO = 'FIRST CLASS'.
** GS_INFO-SMOKER = 'N'.
** GS_INFO-STATUS = 'GRE'.
** APPEND GS_INFO TO GT_INFO.
** CLEAR GS_INFO.
**
**  CL_DEMO_OUTPUT=>DISPLAY( GT_INFO[] ). "출력

*LOOP AT GT_INFO INTO GS_INFO.
*WRITE : GS_INFO-CARRID,
*        GS_INFO-CONNID,
*        GS_INFO-FLDATE,
*        GS_INFO-PRICE,
*        GS_INFO-CURRENCY,
*        GS_INFO-MEMO,
*        GS_INFO-SMOKER ,
*        GS_INFO-STATUS , /.
*ENDLOOP.

*DATA : GT_INFO TYPE TABLE OF TS_INFO WITH HEADER LINE.
* GT_INFO-CARRID = 'AA'.
* GT_INFO-CONNID = '17'.
* GT_INFO-FLDATE = '20210101'.
* GT_INFO-PRICE = '100'.
* GT_INFO-CURRENCY = 'USD'.
* GT_INFO-MEMO = 'BUSINESS CLASS'.
* GT_INFO-SMOKER = 'N'.
* GT_INFO-STATUS = 'GRE'.
* APPEND GT_INFO.
* CLEAR GT_INFO.
*
* GT_INFO-CARRID = 'AZ'.
* GT_INFO-CONNID = '64'.
* GT_INFO-FLDATE = '20210201'.
* GT_INFO-PRICE = '70'.
* GT_INFO-CURRENCY = 'USD'.
* GT_INFO-MEMO = 'ECONOMY CLASS'.
* GT_INFO-SMOKER = 'N'.
* GT_INFO-STATUS = 'YEL'.
* APPEND GT_INFO.
* CLEAR GT_INFO.
*
* GT_INFO-CARRID = 'LH'.
* GT_INFO-CONNID = '77'.
* GT_INFO-FLDATE = '20210301'.
* GT_INFO-PRICE = '120'.
* GT_INFO-CURRENCY = 'USD'.
* GT_INFO-MEMO = 'BUSINESS CLASS'.
* GT_INFO-SMOKER = 'Y'.
* GT_INFO-STATUS = 'GRE'.
* APPEND GT_INFO.
* CLEAR GT_INFO.
*
* GT_INFO-CARRID = 'UA'.
* GT_INFO-CONNID = '99'.
* GT_INFO-FLDATE = '20210401'.
* GT_INFO-PRICE = '150'.
* GT_INFO-CURRENCY = 'USD'.
* GT_INFO-MEMO = 'FIRST CLASS'.
* GT_INFO-SMOKER = 'N'.
* GT_INFO-STATUS = 'GRE'.
* APPEND GT_INFO.
* CLEAR GT_INFO.
*
*  GT_INFO-CARRID = 'UB'.
* GT_INFO-CONNID = '99'.
* GT_INFO-FLDATE = '20210501'.
* GT_INFO-PRICE = '150'.
* GT_INFO-CURRENCY = 'USD'.
* GT_INFO-MEMO = 'FIRST CLASS'.
* GT_INFO-SMOKER = 'N'.
* GT_INFO-STATUS = 'GRE'.
* INSERT GT_INFO INDEX 3.
* CLEAR GT_INFO.
*" INDEX
**READ TABLE GT_INFO INTO GS_INFO INDEX 5.
**IF SY-SUBRC EQ 0.
**  CL_DEMO_OUTPUT=>DISPLAY( GS_INFO ).
**ENDIF.
*
*
*" CARRID CONNID FLDATE
**READ TABLE GT_INFO INTO GS_INFO WITH KEY CARRID = 'DE'
**                                         CONNID = '0088'
**                                         FLDATE = '20210530'.
**IF SY-SUBRC EQ 0.
**  CL_DEMO_OUTPUT=>DISPLAY( GS_INFO ).
**ENDIF.
*
*
**DELETE GT_INFO WHERE CARRID EQ 'AA'. "삭제
*
*SORT GT_INFO BY CARRID CONNID FLDATE. "정렬
*SORT GT_INFO BY CARRID ASCENDING CONNID ASCENDING FLDATE DESCENDING. "정렬
*SORT GT_INFO BY FLDATE DESCENDING. "날짜 내림차순 정렬
*CL_DEMO_OUTPUT=>DISPLAY( GT_INFO[] ). "출력


DATA : GT_CONNECTIONS TYPE BC400_T_CONNECTIONS,
       GS_CONNECTION TYPE BC400_S_CONNECTION.

DATA : BEGIN OF GS_INFO.
  INCLUDE STRUCTURE BC400_S_CONNECTION.
  DATA : MEMO(10) TYPE C.
 DATA : END OF GS_INFO.

 DATA : GT_INFO LIKE TABLE OF GS_INFO.

TRY.
CALL METHOD CL_BC400_FLIGHTMODEL=>GET_CONNECTIONS

  IMPORTING
    ET_CONNECTIONS = GT_CONNECTIONS.

 CATCH CX_BC400_NO_DATA .
   WRITE : 'NO DATA'.

ENDTRY.

SORT GT_CONNECTIONS ASCENDING BY DEPTIME.


*LOOP AT GT_CONNECTIONS INTO GS_CONNECTION.
*  MOVE-CORRESPONDING GS_CONNECTION TO GS_INFO.
*  IF GS_INFO-DEPTIME > '120000'.
*    GS_INFO-MEMO = '오후'.
*  ELSE.
*    GS_INFO-MEMO = '오전'.
*  ENDIF.
*  APPEND GS_INFO TO GT_INFO.
*  CLEAR GS_INFO.
*ENDLOOP.

*CL_DEMO_OUTPUT=>DISPLAY( GT_INFO[] ).

*LOOP AT GT_CONNECTIONS INTO GS_CONNECTION.
*  WRITE : /, GS_CONNECTION-CARRID,
*           GS_CONNECTION-CONNID,
*           GS_CONNECTION-CITYFROM,
*           GS_CONNECTION-AIRPFROM,
*           GS_CONNECTION-CITYTO,
*           GS_CONNECTION-AIRPTO,
*           GS_CONNECTION-FLTIME,
*           GS_CONNECTION-DEPTIME,
*           GS_CONNECTION-ARRTIME.
*ENDLOOP.

LOOP AT GT_CONNECTIONS INTO GS_CONNECTION.

  IF GS_CONNECTION-CARRID EQ 'AZ'.
    GS_CONNECTION-CARRID = 'AA'.
    GS_CONNECTION-CONNID = '0064'.
    MODIFY GT_CONNECTIONS FROM GS_CONNECTION TRANSPORTING CARRID CONNID. "필드를 구체적으로 명시
    CLEAR GS_CONNECTION.
  ENDIF.
  ENDLOOP.
CL_DEMO_OUTPUT=>DISPLAY( GT_CONNECTIONS[] ). "출력
