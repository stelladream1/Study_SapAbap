*&---------------------------------------------------------------------*
*& Report ZHSRB0231
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZHSRB0231.

*간접선언 : 설계도 참조 types -> class local, global
* 직접선언 : data -> memory 직접 생성

*** 1 간접선언
*TYPES : BEGIN OF TS_FLIGHTINFO,
*          CARRID     TYPE S_CARR_ID,
*          CARRNAME   TYPE SCARR-CARRNAME, "S_CARRNAME
*          CONNID     TYPE S_CONN_ID,
*          FLDATE     TYPE S_DATE,
*          PERCENTAGE TYPE P LENGTH 3 DECIMALS 2,
*        END OF TS_FLIGHTINFO.
*
**** 1번을 활용한 직접선언
*DATA : GS_FLIGHTINFO TYPE TS_FLIGHTINFO.

*DATA : BEGIN OF GS_FLIGHTINFO,
*         CARRID     LIKE SFLIGHT-CARRID,
*         CARRNAME   LIKE SCARR-CARRNAME,
**         CONNID     LIKE SFLIGHT-CONNID,
*         CONNID     TYPE S_CONN_ID,
*         FLDATE     LIKE SFLIGHT-FLDATE,
*         PERCENTAGE TYPE P LENGTH 3 DECIMALS 2,
*       END OF GS_FLIGHTINFO.

*테이블, 구조체
*테이블-필드
*구조체-필드
*GS_FLIGHTINFO-CARRID = 'AA'. "RHS
**MOVE 'AA' TO GS_FLIGHTINFO-CARRID. "LHS
*GS_FLIGHTINFO-CARRNAME = 'American Airline'.
*GS_FLIGHTINFO-CONNID = '0017'.
*GS_FLIGHTINFO-FLDATE = '20210715'.
*GS_FLIGHTINFO-PERCENTAGE = '9.5'.
*
*WRITE : GS_FLIGHTINFO-CARRID,
*        GS_FLIGHTINFO-CARRNAME,
*        GS_FLIGHTINFO-CONNID,
*        GS_FLIGHTINFO-FLDATE,
*        GS_FLIGHTINFO-PERCENTAGE,/.


*DATA GS_SCARR TYPE BC400_S_CARRIER.
*
*PARAMETERS : P_CAID TYPE BC400_S_CARRIER.
*
*
*GS_SCARR-CARRID = P_CAID.
**TRY.
*CALL METHOD CL_BC400_FLIGHTMODEL=>GET_CARRIER
*  EXPORTING
*    IV_CARRID  = GS_SCARR-CARRID
*  IMPORTING
*    ES_CARRIER = GS_SCARR.
*
*WRITE : GS_SCARR-CARRID,
*        GS_SCARR-CARRNAME,
*        GS_SCARR-URL.
*
*DATA : GS_FLIGHT TYPE BC400_S_FLIGHT.

*GS_FLIGHT-CARRID = 'AA'.
*GS_FLIGHT-CONNID = '0017'.
*GS_FLIGHT-FLDATE = '20200130'.


*PARAMETERS : P_CARRID TYPE BC400_S_FLIGHT-CARRID,
*             P_CONNID TYPE BC400_S_FLIGHT-CONNID,
*             P_FLDATE TYPE BC400_S_FLIGHT-FLDATE.
*
*GS_FLIGHT-CARRID = P_CARRID.
*GS_FLIGHT-CONNID = P_CONNID.
*GS_FLIGHT-FLDATE = P_FLDATE.
*
*
*
*
*TRY.
*CALL METHOD CL_BC400_FLIGHTMODEL=>GET_FLIGHT
*  EXPORTING
*    IV_CARRID = GS_FLIGHT-CARRID
*    IV_CONNID = GS_FLIGHT-CONNID
*    IV_FLDATE = GS_FLIGHT-FLDATE
*  IMPORTING
*    ES_FLIGHT = GS_FLIGHT.
*
* CATCH CX_BC400_NO_DATA .
*   WRITE : 'NO DATA'.
*   EXIT.
* CATCH CX_BC400_NO_AUTH .
*      WRITE : 'NO AUTH'.
*   EXIT.
*ENDTRY.
*
*WRITE : GS_FLIGHT-CARRID,
*        GS_FLIGHT-CONNID,
*        GS_FLIGHT-FLDATE,
*        GS_FLIGHT-SEATSMAX,
*        GS_FLIGHT-SEATSOCC,
*        GS_FLIGHT-PERCENTAGE,/.
*--------------------------------------------------------------


**TYPES : BEGIN OF TS_FLIGHTINFO,
**          CARRID     TYPE S_CARR_ID,
**          CARRNAME   TYPE SCARR-CARRNAME, "S_CARRNAME
**          CONNID     TYPE S_CONN_ID,
**          FLDATE     TYPE S_DATE,
**          PERCENTAGE TYPE P LENGTH 3 DECIMALS 2,
**        END OF TS_FLIGHTINFO.
**
** DATA : GS_FLIGHT TYPE BC400_S_FLIGHT,
**        GS_INFO TYPE TS_FLIGHTINFO.
**
**GS_FLIGHT-CARRID = 'AA'.
**GS_FLIGHT-CONNID = '0017'.
**GS_FLIGHT-FLDATE = '20200130'.
**
**
**
**
**TRY.
**CALL METHOD CL_BC400_FLIGHTMODEL=>GET_FLIGHT
**  EXPORTING
**    IV_CARRID = GS_FLIGHT-CARRID
**    IV_CONNID = GS_FLIGHT-CONNID
**    IV_FLDATE = GS_FLIGHT-FLDATE
**  IMPORTING
**    ES_FLIGHT = GS_FLIGHT.
**
** CATCH CX_BC400_NO_DATA .
**   WRITE : 'NO DATA'.
**   EXIT.
** CATCH CX_BC400_NO_AUTH .
**      WRITE : 'NO AUTH'.
**   EXIT.
**ENDTRY.
**
**MOVE-CORRESPONDING GS_FLIGHT TO GS_INFO.
**
**WRITE : GS_INFO-CARRID,
**        GS_INFO-CONNID,
**        GS_INFO-FLDATE,
**        GS_INFO-PERCENTAGE,/.
*-------------------------------------------------

*PARAMETERS : PA_CAR TYPE BC400_S_FLIGHT-CARRID,
*             PA_CON TYPE BC400_S_FLIGHT-CONNID,
*             PA_DATE TYPE BC400_S_FLIGHT-FLDATE.
*
*DATA : GS_CARRIER TYPE BC400_S_CARRIER,
*       GS_FLIGHT TYPE BC400_S_FLIGHT.
*
*TYPES : BEGIN OF TS_CARRIERFLIGHT,
*  CARRID TYPE BC400_S_FLIGHT-CARRID,
*  CONNID TYPE BC400_S_FLIGHT-CONNID,
*  FLDATE TYPE BC400_S_FLIGHT-FLDATE,
*  SEATSMAX TYPE BC400_S_FLIGHT-SEATSMAX,
*  SEATSOCC TYPE BC400_S_FLIGHT-SEATSOCC,
*  PERCENTAGE TYPE BC400_S_FLIGHT-PERCENTAGE,
*  CARRNAME TYPE BC400_S_CARRIER-CARRNAME,
*  CURRCODE TYPE BC400_S_CARRIER-CURRCODE,
*  URL TYPE BC400_S_CARRIER-URL,
*  END OF TS_CARRIERFLIGHT.
*
*  DATA : GS_CARRIERFLIGHT TYPE TS_CARRIERFLIGHT.
*
* TRY.
*  CALL METHOD CL_BC400_FLIGHTMODEL=>GET_FLIGHT
*    EXPORTING
*      IV_CARRID = PA_CAR
*      IV_CONNID = PA_CON
*      IV_FLDATE = PA_DATE
*    IMPORTING
*      ES_FLIGHT = GS_FLIGHT.
*
*   CATCH CX_BC400_NO_DATA .
*     WRITE : 'NO DATA'.
*   CATCH CX_BC400_NO_AUTH .
*     WRITE : 'NO AUTH'.
*  ENDTRY.
*  MOVE-CORRESPONDING GS_CARRIER TO GS_CARRIERFLIGHT.
*  MOVE-CORRESPONDING GS_FLIGHT TO GS_CARRIERFLIGHT.
*
*  IF GS_CARRIERFLIGHT IS NOT INITIAL.
*    WRITE : GS_CARRIERFLIGHT-CARRID,
*            GS_CARRIERFLIGHT-CONNID,
*            GS_CARRIERFLIGHT-FLDATE,
*            GS_CARRIERFLIGHT-CARRNAME,
*            GS_CARRIERFLIGHT-CURRCODE,
*            GS_CARRIERFLIGHT-SEATSMAX,
*            GS_CARRIERFLIGHT-SEATSOCC,
*            GS_CARRIERFLIGHT-PERCENTAGE, '%',
*            GS_CARRIERFLIGHT-URL.
*
*  ENDIF.
*
*

*  TYPES : BEGIN OF TS_STUDENT_INFO,
*    NAME TYPE C LENGTH 10,
*    AGE TYPE I,
*    GENDER TYPE C,
*    MAJOR TYPE C LENGTH 20,
*    STU_NO TYPE N LENGTH 10,
*    END OF STUDENT_INFO.
*
*  PARAMETERS : P_NAME TYPE TS_STUDENT_INFO-NAME,
*               P_AGE TYPE TS_STUDENT_INFO-AGE,
*               P_GENDER TYPE TS_STUDENT_INFO-GENDER,
*               P_MAJOR TYPE TS_STUDENT_INFO-MAJOR,
*               P_STU_NO TYPE TS_STUDENT_INFO-STU_NO.
*
*
*  DATA : GS_STUDENT_INFO TYPE STUDENT_INFO.
*
*    GS_STUDENT_INFO-NAME = P_NAME.
*    GS_STUDENT_INFO-AGE = P_AGE.
*    GS_STUDENT_INFO-GENDER = P_GENDER.
*    GS_STUDENT_INFO-MAJOR = P_MAJOR.
*    GS_STUDENT_INFO-STU_NO = P_STU_NO.
*
*MOVE-CORRESPONDING STUDENT_INFO TO GS_STUDENT_INFO.
*
*
* WRITE : GS_STUDENT_INFO-NAME,
*        GS_STUDENT_INFO-AGE,
*        GS_STUDENT_INFO-GENDER,
*        GS_STUDENT_INFO-MAJOR,
*        GS_STUDENT_INFO-STU_NO.
*
*----------------------------------------------------------
*TYPES :  BEGIN OF TY_SFLIGHT,
*         CARRID TYPE SFLIGHT-CARRID,
*         CONNID TYPE SFLIGHT-CONNID,
*         FLDATE TYPE SFLIGHT-FLDATE,
*         PRICE  TYPE SFLIGHT-PRICE,
*         CURRENCY TYPE SFLIGHT-CURRENCY,
*  END OF TY_SFLIGHT.
*
*  DATA : GS_SFLIGHT TYPE TY_SFLIGHT.
*
*  SELECT SINGLE *
*    FROM SFLIGHT
*    INTO CORRESPONDING FIELDS OF GS_SFLIGHT
*    WHERE CARRID EQ 'AA'
*    AND CONNID EQ '0017'
*    AND FLDATE EQ '20200130'.
*
*    WRITE : GS_SFLIGHT-CARRID , GS_SFLIGHT-CONNID, GS_SFLIGHT-FLDATE,
*    GS_SFLIGHT-PRICE, GS_SFLIGHT-CURRENCY.
*-------------------------------------------------------

*TYPES : TT_FLIGHT TYPE STANDARD TABLE OF BC400_S_FLIGHT
*        WITH NON-UNIQUE KEY CARRID CONNID FLDATE.
*
*TYPES : TY_FLIGHT TYPE BC400_S_FLIGHT.
*
*DATA  : GS_FLIGHT TYPE TY_FLIGHT,
*        GT_FLIGHT TYPE TT_FLIGHT.
*
*BREAK-POINT.

*-----------------------------------------------------------------------

"학사정보를 위한 구조체 설계도
*TYPES : BEGIN OF TS_STDINFO,
*          NAME(12)  TYPE C,
*          AGE       TYPE I,
*          GENDER    TYPE C,
*          MAJOR(20) TYPE C,
*          DEPT(20)  TYPE C,
*        END OF TS_STDINFO.
*
*DATA : GS_STDINFO TYPE TS_STDINFO.
*
*GS_STDINFO-NAME = '홍길동'.
*GS_STDINFO-AGE ='20'.
*GS_STDINFO-GENDER = 'M'.
*GS_STDINFO-MAJOR = '경영학과'.
*GS_STDINFO-DEPT = '경영대학'.
*

**DATA : GS_SFLIGHT LIKE SFLIGHT.
*TYPES : BEGIN OF TS_SFLIGHT,
*          CARRID   TYPE SFLIGHT-CARRID,
*          CONNID   TYPE SFLIGHT-CONNID,
*          FLDATE   TYPE SFLIGHT-FLDATE,
*          SEATSMAX TYPE SFLIGHT-SEATSMAX,
*          SEATSOCC TYPE SFLIGHT-SEATSOCC,
*          MEMO(20) TYPE C,
*        END OF TS_SFLIGHT.
*
*DATA : GS_SFLIGHT TYPE TS_SFLIGHT.
*
*SELECT SINGLE *
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF GS_SFLIGHT
*  WHERE CARRID EQ 'AA'
*    AND CONNID EQ '0017'
*    AND FLDATE EQ '20200130'.
*
*GS_SFLIGHT-MEMO = '이상없음,운항가능'.
*
*CL_DEMO_OUTPUT=>DISPLAY( GS_SFLIGHT ).

*TYPES : BEGIN OF TS_INFO,
*          NAME(12)  TYPE C,
*          AGE       TYPE I,
*          GENDER    TYPE C,
*          MAJOR(20) TYPE C,
*          DEPT(20)  TYPE C,
**** 추가 진행
*          EMAIL(40) TYPE C,
*          TEL(20)   TYPE C,
*          HOBBY(40) TYPE C,
*        END OF TS_INFO.
*
*DATA : GS_INFO TYPE TS_INFO.
*
*GS_INFO-NAME   = '홍길동'.
*GS_INFO-AGE    = '20'.
*GS_INFO-GENDER = 'M'.
*GS_INFO-MAJOR  = '경영학과'.
*GS_INFO-DEPT   = '경영대학'.
*GS_INFO-EMAIL  = 'HGD@HANSUNG.AC.KR'.
*GS_INFO-TEL    = '+82-10-1234-5678'.
*GS_INFO-HOBBY  = 'Running and Jumping'.
*
*WRITE : GS_INFO-NAME, GS_INFO-AGE, GS_INFO-GENDER,
*        GS_INFO-MAJOR, GS_INFO-DEPT, GS_INFO-EMAIL,
*        GS_INFO-TEL, GS_INFO-HOBBY,/.


*TYPES : BEGIN OF TS_MEAL,
*          AIRLINE  TYPE SFLIGHT-CARRID,
*          MEAL     TYPE SMEAL-MEALNUMBER,
*          MEALTEXT TYPE SMEALT-TEXT,
*          SPRAS    TYPE SMEALT-SPRACHE,
*        END OF TS_MEAL.
*
*DATA : GS_MEAL TYPE TS_MEAL.
*
*GS_MEAL-AIRLINE = 'AA'.
*GS_MEAL-MEAL = '11'.
*GS_MEAL-MEALTEXT = 'FRENSH TOAST'.
*GS_MEAL-SPRAS = '3'.
*
*WRITE : GS_MEAL-AIRLINE,
*        GS_MEAL-MEAL,
*        GS_MEAL-MEALTEXT,
*        GS_MEAL-SPRAS,/.
*-----------------------------------------------------------------------
*TYPES : TS_SFLIGHT  TYPE SFLIGHT.
*DATA  : GS_SFLIGHT1 TYPE TS_SFLIGHT.
*
*DATA  : GS_SFLIGHT2 LIKE SFLIGHT.
*
*DATA  : GS_SFLIGHT3 TYPE SFLIGHT.


*INCLUDE STRUCTURE
*TYPES : BEGIN OF TS_MARA.
*INCLUDE STRUCTURE MARA.
*TYPES : MEMO(20) TYPE C,
*        CARRID   TYPE SFLIGHT-CARRID,
*        CONNID   TYPE SFLIGHT-CONNID,
*        FLDATE   TYPE SFLIGHT-FLDATE.
*TYPES : END OF TS_MARA.
*
*DATA  : GS_MARA TYPE TS_MARA.
*
*TYPES : BEGIN OF TS_BOOK_E.
*  INCLUDE STRUCTURE SBKKO.
*  TYPES : MEMO(40) TYPE C,
*          ICON TYPE INCON-ID.
*  TYPES : END OF TS_BOOK_E.
*
*  DATA : GS_BOOK_E TYPE TS_BOOK_E.
**-----------------------------------------------------------------------
*INTERNAL TABLE : 메모리에만 존재하는 가상테이블.

* DATA : GT_FILIGHT TYPE STANDARD TABLE OF SFLIGHT.
*
* DATA : GT_SFLIGHT2 TYPE SORTED TABLE OF SFLIGHT WITH NON-UNIQUE KEY CARRID.
*
* DATA : GT_SFLIGHT3 TYPE HASHED TABLE OF SFLIGHT WITH UNIQUE KEY CARRID CONNID FLDATE.

*  TYPES : BEGIN OF TS_INFO,
*    NAME(12) TYPE C,
*    AGE      TYPE I,
*    GENDER TYPE C,
* END OF TS_INFO.
*
* TYPES : TT_INFO TYPE STANDARD TABLE OF TS_INFO.
*
* DATA : GS_INFO1 TYPE TS_INFO,
*        GT_INFO1 TYPE TT_INFO.

**2
* DATA : GS_INFO2 TYPE TS_INFO,
*        GT_INFO2 TYPE TABLE OF TS_INFO.
***3
*
* DATA : GS_INFO3 TYPE TS_INFO,
*        GT_INFO3 LIKE TABLE OF GS_INFO3.
*
****4
*
*DATA : GT_INFO4 TYPE TS_INFO OCCURS 0.
*
*****5
* DATA : GT_INFO5 TYPE TS_INFO OCCURS 0 WITH HEADER LINE.
*
******6
*DATA : BEGIN OF GS_INFO6,
*  NAME(12) TYPE  C,
*  AGE TYPE I,
*  GENDER TYPE C,
* END OF GS_INFO6.
* DATA : GT_INFO5 LIKE TABLE OF GS_INFO6.
*
*******7
* DATA : GT_INFO7 LIKE TABLE OF GS_INFO6 WITH HEADER LINE.
*
********8
* DATA : BEGIN OF GT_INFO8 OCCURS 0,
*   NAME(12) TYPE C,
*   AGE TYPE I,
*   GENDER TYPE C,
* END OF GT_INFO8.
*
*********9
* DATA : GT_INFO LIKE GS_INFO OCCURS 0 WITH HEADER LINE.
*

  TYPES : BEGIN OF TS_INFO,
    NAME(12) TYPE C,
    AGE      TYPE I,
    GENDER TYPE C,
 END OF TS_INFO.

 TYPES : TT_INFO TYPE STANDARD TABLE OF TS_INFO.

 DATA : GS_INFO1 TYPE TS_INFO,
        GT_INFO1 TYPE TT_INFO.

 GS_INFO1-NAME = '홍길동'.
 GS_INFO1-AGE = '20'.
 GS_INFO1-GENDER = 'M'.
 APPEND GS_INFO1 TO GT_INFO1.
 CLEAR GS_INFO1.

 GS_INFO1-NAME = '임꺽정'.
 GS_INFO1-AGE = '30'.
 GS_INFO1-GENDER = 'M'.
 APPEND GS_INFO1 TO GT_INFO1.
 CLEAR GS_INFO1.

 GS_INFO1-NAME = '신윤복'.
 GS_INFO1-AGE = '20'.
 GS_INFO1-GENDER = 'F'.
 APPEND GS_INFO1 TO GT_INFO1.
 CLEAR GS_INFO1.

 CL_DEMO_OUTPUT=>DISPLAY( GT_INFO1[] ). "출력
