*&---------------------------------------------------------------------*
*& Report ZHSRB0234
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZHSRB0234.


*DATA : GT_SFLIGHT LIKE TABLE OF SFLIGHT WITH HEADER LINE.
*
*SELECT *
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT. "동일한 이름끼리 찾아서 넣어줌
*
*"1
*IF SY-SUBRC EQ 0.
* CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
*
*ENDIF.
"2
*IF GT_SFLIGHT[] IS NOT INITIAL.
* CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
*ENDIF.


**--------------------------------------------------------------------
*
*DATA : GT_SCARR LIKE TABLE OF SCARR WITH HEADER LINE.
*
*SELECT *
*  FROM SCARR
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SCARR.
*
*IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SCARR[] ).
*
*ENDIF.


**--------------------------------------------------------------------

*DATA : GT_SPFLI TYPE TABLE OF SPFLI WITH HEADER LINE.
*
*
*
*
*SELECT *
*  FROM SPFLI
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SPFLI.
*
*  IF SY-SUBRC EQ 0.
*    CL_DEMO_OUTPUT=>DISPLAY( GT_SPFLI[] ).
*  ENDIF.

**--------------------------------------------------------------------


*DATA : BEGIN OF GS_SFLIGHT,
*  CARRID LIKE SFLIGHT-CARRID,
*  CONNID LIKE SFLIGHT-CONNID,
*  FLDATE LIKE SFLIGHT-FLDATE,
*  PLANETYPE LIKE SFLIGHT-PLANETYPE,
*  PRICE LIKE SFLIGHT-PRICE,
*  CURRENCY LIKE SFLIGHT-CURRENCY,
*  END OF GS_SFLIGHT.
*
*DATA : GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT WITH HEADER LINE.
*
*
*SELECT CARRID, CONNID, FLDATE, PLANETYPE, PRICE, CURRENCY
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT. "동일한 이름끼리 찾아서 넣어줌
*
*IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
*
*ENDIF.
*--------------------------------------------------------------

*DATA : BEGIN OF TS_SCARR ,
*  CARRID TYPE SCARR-CARRID,
*  CARRNAME TYPE S_CARRNAME,
*  URL TYPE S_CARRURL,
* END OF TS_SCARR.
*
* DATA : GT_SCARR LIKE TABLE OF TS_SCARR WITH HEADER LINE.
*
* SELECT CARRID, CARRNAME, URL
*   FROM SCARR
*   INTO CORRESPONDING FIELDS OF TABLE @GT_SCARR.
*
*  IF SY-SUBRC EQ 0.
*    CL_DEMO_OUTPUT=>DISPLAY( GT_SCARR[] ).
*  ENDIF.

**--------------------------------------

*PARAMETERS : P_CAID LIKE SFLIGHT-CARRID,
*             P_COID LIKE SFLIGHT-CONNID.
*
*
*DATA : BEGIN OF GS_SFLIGHT ,
*  CARRID LIKE SFLIGHT-CARRID,
*  CONNID LIKE SFLIGHT-CONNID,
*  FLDATE LIKE SFLIGHT-FLDATE,
*  PRICE LIKE SFLIGHT-PRICE,
*  CURRENCY LIKE SFLIGHT-CURRENCY,
*  END OF GS_SFLIGHT.
*
*  DATA : GT_SFLIHGT LIKE TABLE OF GS_SFLIGHT WITH HEADER LINE.
*
*  SELECT CARRID, CONNID, FLDATE , PRICE, CURRENCY
*    FROM SFLIGHT
*    INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIHGT
*    " WHERE CARRID EQ 'DL' AND CONNID EQ '1984'.
*     WHERE CARRID EQ @P_CAID
*           AND CONNID EQ @P_COID.
* IF SY-SUBRC EQ 0.
*    CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIHGT[] ).
*  ENDIF.

**--------------------------------------

*TYPES : BEGIN OF TS_SBOOK,
*  CARRID   TYPE SBOOK-CARRID,
*  CONNID   TYPE SBOOK-CONNID,
*  FLDATE   TYPE SBOOK-FLDATE,
*  BOOKID   TYPE SBOOK-BOOKID,
*  CUSTOMID TYPE SBOOK-CUSTOMID,
*  CUSTTYPE TYPE SBOOK-CUSTTYPE,
*  SMOKER   TYPE SBOOK-SMOKER,
*  INVOICE  TYPE SBOOK-INVOICE,
* END OF TS_SBOOK.
*
*
*
*
* DATA : GT_SBOOK TYPE TABLE OF TS_SBOOK WITH HEADER LINE.
*
* SELECT CARRID,CONNID, FLDATE , BOOKID ,CUSTOMID, CUSTTYPE,SMOKER, INVOICE
*   FROM SBOOK
*   INTO CORRESPONDING FIELDS OF TABLE @GT_SBOOK
*   WHERE CARRID EQ 'AA'
*   AND CONNID EQ '0017'
*   AND FLDATE EQ '20200130'.
*
* IF SY-SUBRC EQ 0.
*    CL_DEMO_OUTPUT=>DISPLAY( GT_SBOOK[] ).
*  ENDIF.

*PARAMETERS : P_CARRID LIKE SCARR-CARRID.
*
*DATA : BEGIN OF GS_SCARR,
*  CARRID LIKE SCARR-CARRID,
*  CARRNAME LIKE SCARR-CARRNAME,
*  CURRCODE LIKE SCARR-CURRCODE,
*  URL      LIKE SCARR-URL,
*END OF GS_SCARR.
*
*DATA : GT_SCARR LIKE TABLE OF GS_SCARR WITH HEADER LINE.
*
*SELECT DISTINCT CARRID, CARRNAME "  , CURRCODE ,URL
*  FROM SCARR
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SCARR
*  WHERE CARRID EQ @P_CARRID.
*
* IF SY-SUBRC EQ 0.
*    CL_DEMO_OUTPUT=>DISPLAY( GT_SCARR[] ).
*  ENDIF.

**------------------------------------------

*DATA : BEGIN OF GS_SBOOK,
*  CARRID LIKE SBOOK-CARRID,
*  CONNID LIKE SBOOK-CONNID,
*  FLDATE LIKE SBOOK-FLDATE,
* " BOOKID LIKE SBOOK-BOOKID,
*END OF GS_SBOOK.
*
*DATA : GT_SBOOK LIKE TABLE OF GS_SBOOK WITH HEADER LINE.
*
*SELECT DISTINCT CARRID,CONNID,FLDATE
*  FROM SBOOK
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SBOOK
*  WHERE CARRID EQ 'AA'
*  AND CONNID EQ '0017'.
* IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SBOOK[] ).
* ENDIF.

**-------------------------------------------------

" DATA : GT_SFLIGHT LIKE SFLIGHT OCCURS 0.
*DATA : BEGIN OF GT_SFLIGHT OCCURS 0,
*  COUNT TYPE I,
*  CARRID LIKE SFLIGHT-CARRID,
*  CONNID LIKE SFLIGHT-CONNID,
* " FLDATE LIKE SFLIGHT-FLDATE,
* PRICE LIKE SFLIGHT-PRICE,
*  CURRENCY LIKE SFLIGHT-CURRENCY,
*  "SEATSMAX LIKE SFLIGHT-SEATSMAX,
*  END OF GT_SFLIGHT.
* SELECT CARRID ,CONNID , FLDATE ,PRICE ,CURRENCY , SEATSMAX
*   FROM SFLIGHT
*   INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*   ORDER BY CARRID ASCENDING, CONNID DESCENDING, FLDATE ASCENDING. " ASCENDING = 오름차순(디폴트) DSCENDING = 내림차순

*SELECT COUNT(*) AS COUNT , CARRID
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*  GROUP BY CARRID .

*SELECT COUNT(*) AS COUNT,CARRID, CONNID , SUM( PRICE ) AS PRICE, CURRENCY
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*  GROUP BY CARRID, CONNID,CURRENCY
*  HAVING SUM( PRICE ) > '5000'
*  ORDER BY PRICE DESCENDING.

* IF GT_SFLIGHT[] IS NOT INITIAL.
*     CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
*   ENDIF.
**------------------------------------------------------

*DATA : BEGIN OF GS_SFLIGHT,
*  CARRID LIKE SFLIGHT-CARRID,
*  PRICE LIKE SFLIGHT-PRICE,
*  PAYMENTSUM LIKE SFLIGHT-PAYMENTSUM,
* END OF GS_SFLIGHT.
*
* DATA : GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT WITH HEADER LINE.
*
* SELECT CARRID, AVG( PRICE ) AS PRICE, SUM( PAYMENTSUM ) AS PAYMENTSUM
*   FROM SFLIGHT
*   INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*   GROUP BY CARRID
*   HAVING SUM( PAYMENTSUM ) > '10000000'
*   ORDER BY PAYMENTSUM DESCENDING.
*
*IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
* ENDIF.
**------------------------------------------------------

*DATA : BEGIN OF GS_SFLIGHT,
*  CARRID    LIKE SFLIGHT-CARRID,
* " CONNID    LIKE SFLIGHT-CONNID,
*  AVG_PRICE LIKE SFLIGHT-PRICE,
*  MAX_PRICE LIKE SFLIGHT-PRICE,
*  MIN_PRICE LIKE SFLIGHT-PRICE,
*  SUM_PRICE LIKE SFLIGHT-PRICE,
*  COUNT     TYPE I,
*END OF GS_SFLIGHT.
*
*  DATA : GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT WITH HEADER LINE.
*
*  SELECT CARRID ,
*         "CONNID ,
*         AVG( PRICE ) AS AVG_PRICE,
*         MAX( PRICE ) AS MAX_PRICE,
*         MIN( PRICE ) AS MIN_PRICE,
*         SUM( PRICE ) AS SUM_PRICE,
*         COUNT( * )   AS COUNT
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*  GROUP BY CARRID.",CONNID.
*
*IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
*ENDIF.

**------------------------------------------------------

*TYPES : BEGIN OF TS_SFLIGHT,
*  CARRID TYPE SFLIGHT-CARRID,
*  CONNID TYPE SFLIGHT-CONNID,
*  CARRNAME TYPE SCARR-CARRNAME,
*END OF TS_SFLIGHT.
*
*TYPES : BEGIN OF TS_TEXT,
*  CARRID TYPE SCARR-CARRID,
*  CARRNAME TYPE SCARR-CARRNAME,
*END OF TS_TEXT.
*
*
*
*
*DATA : GS_SFLIGHT TYPE TS_SFLIGHT,
*       GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT,
*       GS_TEXT  TYPE TS_TEXT,
*       GT_TEXT LIKE TABLE OF GS_TEXT.
*
*" MAIN TABLE
*SELECT DISTINCT CARRID, CONNID
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT.
*"SUB TABLE
*SELECT  CARRID, CARRNAME
*    FROM SCARR
*    INTO CORRESPONDING FIELDS OF TABLE @GT_TEXT.
*DATA : LV_TABIX TYPE SY-TABIX.
*LOOP AT GT_SFLIGHT INTO GS_SFLIGHT.
*  LV_TABIX = SY-TABIX.
*  READ TABLE GT_TEXT INTO GS_TEXT WITH KEY CARRID = GS_SFLIGHT-CARRID.
*  IF SY-SUBRC EQ 0.
*    GS_SFLIGHT-CARRNAME = GS_TEXT-CARRNAME.
*MODIFY GT_SFLIGHT FROM GS_SFLIGHT INDEX LV_TABIX TRANSPORTING CARRNAME.
*  ENDIF.
*
*ENDLOOP.
*
*IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
*ENDIF.




*TYPES : BEGIN OF TS_SFLIGHT,
*  CARRID TYPE SFLIGHT-CARRID,
*  CONNID TYPE SFLIGHT-CONNID,
*  URL    TYPE SCARR-URL,
*END OF TS_SFLIGHT.
*
*TYPES : BEGIN OF TS_TEXT,
*  CARRID TYPE SCARR-CARRID,
*  URL    TYPE SCARR-URL,
*END OF TS_TEXT.
*
*DATA : GS_SFLIGHT TYPE TS_SFLIGHT,
*       GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT,
*       GS_TEXT    TYPE TS_TEXT,
*       GT_TEXT    LIKE TABLE OF GS_TEXT.
*
*DATA : LV_TABIX LIKE SY-TABIX.
*
*SELECT DISTINCT CARRID ,
*                CONNID
*       FROM SFLIGHT
*       INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT.
*
*SELECT DISTINCT CARRID ,
*                URL
*       FROM SCARR
*       INTO CORRESPONDING FIELDS OF TABLE @GT_TEXT.
*
*
*LOOP AT GT_SFLIGHT INTO GS_SFLIGHT.
* LV_TABIX = SY-TABIX.
* READ TABLE GT_TEXT INTO GS_TEXT WITH KEY CARRID = GS_SFLIGHT-CARRID.
* IF SY-SUBRC EQ 0.
*    GS_SFLIGHT-URL = GS_TEXT-URL.
*    MODIFY GT_SFLIGHT FROM GS_SFLIGHT INDEX LV_TABIX TRANSPORTING URL.
* ENDIF.
*ENDLOOP.
*
*
*IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
*ENDIF.

*--------------------------------------------------
"헤더라인 없음


*
*DATA : BEGIN OF GS_SFLIGHT,
*  CARRID LIKE SFLIGHT-CARRID,
*  CONNID LIKE SFLIGHT-CONNID,
*  URL LIKE SCARR-URL,
*END OF GS_SFLIGHT.
*
*DATA : BEGIN OF GS_SCARR,
*  CARRID LIKE SFLIGHT-CARRID,
*  URL LIKE SCARR-URL,
* END OF GS_SCARR.
*
* DATA : LV_TABIX TYPE SY-TABIX.
*
*
*DATA : GT_SFLGIHT LIKE TABLE OF GS_SFLIGHT,
*       GT_SCARR LIKE TABLE OF GS_SCARR.
*
* SELECT DISTINCT CARRID , CONNID
*   FROM SFLIGHT
*   INTO CORRESPONDING FIELDS OF TABLE @GT_SFLGIHT.
*
* SELECT CARRID, URL
*   FROM SCARR
*   INTO CORRESPONDING FIELDS OF TABLE @GT_SCARR.
*
*  LOOP AT GT_SFLGIHT INTO GS_SFLIGHT.
*   LV_TABIX = SY-TABIX.
*   READ TABLE GT_SCARR INTO GS_SCARR WITH KEY CARRID = GS_SFLIGHT.
*   IF SY-SUBRC EQ 0.
*     GS_SFLIGHT-URL = GS_SCARR-URL.
*     MODIFY GT_SFLGIHT FROM GS_SFLIGHT INDEX LV_TABIX TRANSPORTING URL.
*   ENDIF.
*  ENDLOOP.
*
* IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SFLGIHT[] ).
*ENDIF.


*--------------------------------------------------------
"헤더라인 존재
*DATA : BEGIN OF GS_SFLIGHT,
*  CARRID LIKE SFLIGHT-CARRID,
*  CONNID LIKE SFLIGHT-CONNID,
*  URL LIKE SCARR-URL,
*END OF GS_SFLIGHT.
*
*DATA : BEGIN OF GS_SCARR,
*  CARRID LIKE SFLIGHT-CARRID,
*  URL LIKE SCARR-URL,
* END OF GS_SCARR.
*
* DATA : LV_TABIX TYPE SY-TABIX.
*
*
*DATA : GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT WITH HEADER LINE,
*       GT_SCARR LIKE TABLE OF GS_SCARR WITH HEADER LINE.
*
* SELECT DISTINCT CARRID , CONNID
*   FROM SFLIGHT
*   INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT.
*
* SELECT CARRID, URL
*   FROM SCARR
*   INTO CORRESPONDING FIELDS OF TABLE @GT_SCARR.
*
*  LOOP AT GT_SFLIGHT.
*  LV_TABIX = SY-TABIX.
*  READ TABLE GT_SCARR WITH KEY CARRID = GT_SFLIGHT-CARRID.
*  IF SY-SUBRC EQ 0.
*    GT_SFLIGHT-URL = GT_SCARR-URL.
*    MODIFY GT_SFLIGHT INDEX LV_TABIX TRANSPORTING URL.
*  ENDIF.
*ENDLOOP.
*
* IF SY-SUBRC EQ 0.
*  CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
*ENDIF.
*
*
*
*DATA : GT_SFLIGHT TYPE TABLE OF SFLIGHT,   " TAB
*       GS_SFLIGHT LIKE LINE OF GT_SFLIGHT. " STR
*
*DATA : GS_REF LIKE SFLIGHT,
*       GT_REF LIKE TABLE OF GS_REF.
*
*DATA : LV_TABIX TYPE SY-TABIX.
*
*SELECT CARRID, CONNID, FLDATE
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT.
*
*SELECT *
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_REF.
*
*LOOP AT GT_SFLIGHT INTO GS_SFLIGHT.
*  LV_TABIX = SY-TABIX.
*  READ TABLE GT_REF INTO GS_REF WITH KEY CARRID = GS_SFLIGHT-CARRID
*                                         CONNID = GS_SFLIGHT-CONNID
*                                         FLDATE = GS_SFLIGHT-FLDATE.
*  IF SY-SUBRC EQ 0.
*    MOVE-CORRESPONDING GS_REF TO GS_SFLIGHT.
*  ENDIF.
*
*  MODIFY GT_SFLIGHT FROM GS_SFLIGHT INDEX LV_TABIX.
*ENDLOOP.

**---------------------------------------------------------------------------
*TYPES : BEGIN OF TS_SFLIGHT,
*  CARRID TYPE SFLIGHT-CARRID,
*  CONNID TYPE SFLIGHT-CONNID,
*  FLDATE TYPE SFLIGHT-FLDATE,
*  PRICE TYPE SFLIGHT-PRICE,
*  CURRENCY TYPE SFLIGHT-CURRENCY,
*  PLANETYPE TYPE SFLIGHT-PLANETYPE,
* END OF TS_SFLIGHT.
*
*TYPES : TT_SFLIGHT TYPE TABLE OF TS_SFLIGHT.
*
* DATA : GS_SFLIGHT TYPE TS_SFLIGHT,
*        GS_REF     TYPE SFLIGHT,
*        GT_SFLIGHT TYPE TT_SFLIGHT.
*
* DATA : LV_TABIX TYPE SY-TABIX.
*
*DATA : LV_PRICE TYPE SFLIGHT-PRICE,
*        LV_CURRENCY TYPE SFLIGHT-CURRENCY,
*        LV_PLANETYPE TYPE SFLIGHT-PLANETYPE.
*
* SELECT  DISTINCT CARRID ,CONNID ,FLDATE
*   FROM SFLIGHT
*   INTO TABLE @GT_SFLIGHT.
*
*   LOOP AT GT_SFLIGHT INTO GS_SFLIGHT.
*    LV_TABIX = SY-TABIX.
*
* CLEAR : GS_REF.
"CASE 1
*    SELECT SINGLE PRICE , CURRENCY, PLANETYPE
*      FROM SFLIGHT
*      INTO ( @GS_SFLIGHT-PRICE , @GS_SFLIGHT-CURRENCY, @GS_SFLIGHT-PLANETYPE )
*      WHERE CARRID EQ @GS_SFLIGHT-CARRID
*      AND CONNID EQ @GS_SFLIGHT-CONNID
*      AND FLDATE EQ @GS_SFLIGHT-FLDATE.
*
*
*     IF SY-SUBRC EQ 0.
*       MODIFY GT_SFLIGHT FROM GS_SFLIGHT INDEX LV_TABIX
*       TRANSPORTING PRICE CURRENCY PLANETYPE.
*     ENDIF.
" CASE 2
* SELECT SINGLE PRICE , CURRENCY, PLANETYPE
*   FROM SFLIGHT
*      INTO ( @LV_PRICE , @LV_CURRENCY, @LV_PLANETYPE )
*      WHERE CARRID EQ @GS_SFLIGHT-CARRID
*      AND CONNID EQ @GS_SFLIGHT-CONNID
*      AND FLDATE EQ @GS_SFLIGHT-FLDATE.
*
* IF SY-SUBRC EQ 0.
*   GS_SFLIGHT-PRICE = LV_PRICE.
*   GS_SFLIGHT-CURRENCY = LV_CURRENCY.
*   GS_SFLIGHT-PLANETYPE = LV_PLANETYPE.
*   MODIFY GT_SFLIGHT FROM GS_SFLIGHT INDEX LV_TABIX
*   TRANSPORTING PRICE CURRENCY PLANETYPE.
* ENDIF.

*"CASE 3
* SELECT SINGLE *
*   FROM SFLIGHT
*   INTO CORRESPONDING FIELDS OF @GS_REF
*      WHERE CARRID EQ @GS_SFLIGHT-CARRID
*      AND CONNID EQ @GS_SFLIGHT-CONNID
*      AND FLDATE EQ @GS_SFLIGHT-FLDATE.
*
*  IF SY-SUBRC EQ 0.
*    GS_SFLIGHT-PRICE  = GS_REF-PRICE.
*    GS_SFLIGHT-CURRENCY = GS_REF-CURRENCY.
*    GS_SFLIGHT-PLANETYPE = GS_REF-PLANETYPE.
*
*   MODIFY GT_SFLIGHT FROM GS_SFLIGHT INDEX LV_TABIX
*   TRANSPORTING PRICE CURRENCY PLANETYPE.
*  ENDIF.
*   ENDLOOP.
*
*   IF GT_SFLIGHT[] IS NOT INITIAL.
* CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT ).
*   ENDIF.

*--------------------------------------------------------
*TYPES : BEGIN OF TS_SFLIGHT,
*          CARRID   TYPE SFLIGHT-CARRID,
*          CONNID   TYPE SFLIGHT-CONNID,
*          CARRNAME TYPE SCARR-CARRNAME,
*          URL      TYPE SCARR-URL,
*        END OF TS_SFLIGHT.
*TYPES : TT_SFLIGHT TYPE STANDARD TABLE OF TS_SFLIGHT.
*
*DATA : GS_SFLIGHT TYPE TS_SFLIGHT,
*       GT_SFLIGHT TYPE TT_SFLIGHT.
*
*DATA : GS_SCARR   TYPE SCARR.
*
****2. SFLIGHT 정보 발췌
****-> DISTINCT
*SELECT DISTINCT CARRID, CONNID
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT.
*
****3. LOOP 이용 DATA 수정
****-> SCARR => CARRNAME, URL
*LOOP AT GT_SFLIGHT INTO GS_SFLIGHT.
*  CLEAR : GS_SCARR.

*  SELECT SINGLE CARRNAME, URL
*    FROM SCARR
*    INTO ( @GS_SFLIGHT-CARRNAME, @GS_SFLIGHT-URL )
*   WHERE CARRID EQ @GS_SFLIGHT-CARRID.
*
*  IF SY-SUBRC EQ 0.
*    MODIFY GT_SFLIGHT FROM GS_SFLIGHT TRANSPORTING CARRNAME URL.
*  ENDIF.

**  SELECT SINGLE CARRNAME, URL
**    FROM SCARR
**    INTO CORRESPONDING FIELDS OF @GS_SCARR
**   WHERE CARRID EQ @GS_SFLIGHT-CARRID.
**
**  IF SY-SUBRC EQ 0.
**    GS_SFLIGHT-CARRNAME = GS_SCARR-CARRNAME.
**    GS_SFLIGHT-URL      = GS_SCARR-URL.
**    MODIFY GT_SFLIGHT FROM GS_SFLIGHT TRANSPORTING CARRNAME URL.
**  ENDIF.
**ENDLOOP.
**
*****4. 출력 CL_DEMO_OUTPUT
**IF GT_SFLIGHT[] IS NOT INITIAL.
**  CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT ).
**ENDIF.
***--------------------------------------------------------

*TABLES : SFLIGHT.
*SELECT-OPTIONS : S_CAID FOR SFLIGHT-CARRID.
*
*
*DATA : GT_SFLIGHT TYPE TABLE OF SFLIGHT WITH HEADER LINE.
*
*SELECT *
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*  WHERE CARRID IN ('AA', 'AZ', 'UA')
*    AND PRICE  BETWEEN '700' AND '1200'
*    AND CURRENCY  LIKE '_U_'
*    AND PLANETYPE LIKE '%80%'.
*
*CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).

*TABLES : SFLIGHT.
*SELECT-OPTIONS : S_DATE FOR SFLIGHT-FLDATE.
*
*S_DATE-SIGN = 'I'.
*S_DATE-OPTION = 'BT'.
*S_DATE-LOW = SY-DATUM.
*S_DATE-HIGH = SY-DATUM.
*APPEND S_DATE.
*
*TABLES : SFLIGHT.
*RANGES : R_DATE FOR SFLIGHT-FLDATE.
*
*R_DATE-SIGN = 'I'.
*R_DATE-OPTION = 'BT'.
*R_DATE-LOW = '20200130'.
*R_DATE-HIGH = '20210721'.
*APPEND R_DATE.

*TABLES : SFLIGHT.
*RANGES : R_CAID FOR SFLIGHT-CARRID.
*DATA : GT_SFLIGHT LIKE SFLIGHT OCCURS 0 WITH HEADER LINE.
*R_CAID-SIGN = 'I'.
*R_CAID-OPTION = 'EQ'.
*R_CAID-LOW = 'AZ'.
*R_CAID-HIGH = 'LH'.
*APPEND R_CAID.
*
*SELECT *
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*  WHERE CARRID IN @R_CAID.

**-----------------------------------------------------


*
*
*TABLES : SFLIGHT.
*DATA : GT_SFLIGHT TYPE TABLE OF SFLIGHT.
*SELECT-OPTIONS : S_DATE FOR SFLIGHT-FLDATE.
*
*S_DATE-SIGN = 'I'.
*S_DATE-OPTION = 'BT'.
*S_DATE-LOW = '20200128'.
*S_DATE-HIGH = '20200201'.
*
*APPEND S_DATE.
*
*SELECT *
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*  WHERE FLDATE IN @S_DATE
*  ORDER BY CARRID CONNID FLDATE PRICE DESCENDING.
*CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
**------------------------
*DATA : BEGIN OF GS_SFLIGHT,
*  CARRID LIKE SFLIGHT-CARRID,
*  CONNID LIKE SFLIGHT-CONNID,
*  PRICE LIKE SFLIGHT-PRICE,
*  END OF GS_SFLIGHT.
*
*DATA : GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT WITH HEADER LINE.
*
*SELECT DISTINCT CARRID , CONNID  ,SUM( PRICE ) AS PRICE
*  FROM SFLIGHT
*  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT
*  GROUP BY CARRID , CONNID
*  HAVING SUM( PRICE ) >= '5000'.
*
* CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).


**-----------------------------------------------





DATA : BEGIN OF GS_SFLIGHT,
  CARRID    LIKE SFLIGHT-CARRID,
  CONNID    LIKE SFLIGHT-CONNID,
  PRICE     LIKE  SFLIGHT-PRICE,
  FLDATE    LIKE SFLIGHT-FLDATE,
  CARRNAME  LIKE SCARR-CARRNAME,
  URL       LIKE SCARR-URL,
  CITYFROM  LIKE SPFLI-CITYFROM,
  CITYTO    LIKE SPFLI-CITYTO,
END OF GS_SFLIGHT.

DATA : BEGIN OF GS_SCARR,
  CARRID   LIKE SCARR-CARRID,
  CARRNAME LIKE SCARR-CARRNAME,
  URL      LIKE SCARR-URL,
END OF GS_SCARR.

DATA : BEGIN OF GS_SPFLI,
  CONNID   LIKE SPFLI-CONNID,
  CITYFROM LIKE SPFLI-CITYFROM,
  CITYTO   LIKE SPFLI-CITYTO,
 END OF GS_SPFLI.

DATA : GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT,
       GT_SCARR   LIKE TABLE OF GS_SCARR,
       GT_SPFLI   LIKE TABLE OF GS_SPFLI.

SELECT *
  FROM SFLIGHT
  INTO CORRESPONDING FIELDS OF TABLE @GT_SFLIGHT.

LOOP AT GT_SFLIGHT INTO GS_SFLIGHT.
  CLEAR : GS_SCARR, GS_SPFLI.

  SELECT SINGLE CARRNAME, URL
    FROM SCARR
    INTO ( @GS_SFLIGHT-CARRNAME, @GS_SFLIGHT-URL )
   WHERE CARRID EQ @GS_SFLIGHT-CARRID.

  SELECT SINGLE CITYFROM, CITYTO
    FROM SPFLI
    INTO ( @GS_SFLIGHT-CITYFROM, @GS_SFLIGHT-CITYTO )
   WHERE CONNID EQ @GS_SFLIGHT-CONNID.

  IF SY-SUBRC EQ 0.
    MODIFY GT_SFLIGHT FROM GS_SFLIGHT TRANSPORTING CARRNAME URL CITYFROM CITYTO.
  ENDIF.
  ENDLOOP.

CL_DEMO_OUTPUT=>DISPLAY( GT_SFLIGHT[] ).
