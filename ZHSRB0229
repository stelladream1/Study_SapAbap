*&---------------------------------------------------------------------*
*& Report ZHSRB0229
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZHSRB0229.
PARAMETERS:
  PA_INT1 TYPE I,
  PA_OP   TYPE C LENGTH 1,
  PA_INT2 TYPE I.

DATA GV_RESULT TYPE P LENGTH 16 DECIMALS 2.

IF ( PA_OP = '+' OR
     PA_OP = '-' OR
     PA_OP = '*' OR
     PA_OP = '/' AND PA_INT2 <> 0 OR
     PA_OP = '%' OR
     PA_OP = 'P' ).

  CASE PA_OP.
    WHEN '+'.
      GV_RESULT = PA_INT1 + PA_INT2.
    WHEN '-'.
      GV_RESULT = PA_INT1 - PA_INT2.
    WHEN '*'.
      GV_RESULT = PA_INT1 * PA_INT2.
    WHEN '/'.
      GV_RESULT = PA_INT1 / PA_INT2.
    WHEN 'P'.
      TRY.
          CALL METHOD CL_BC400_COMPUTE=>GET_POWER
            EXPORTING
              IV_BASE   = PA_INT1
              IV_POWER  = PA_INT2
            IMPORTING
              EV_RESULT = GV_RESULT.
        CATCH CX_BC400_POWER_TOO_HIGH .
          WRITE 'Max value of Power is 4'.
        CATCH CX_BC400_RESULT_TOO_HIGH .
          WRITE 'Result value was too high'.
      ENDTRY.
    WHEN '%'.
      CALL METHOD CL_BC400_MOS_COMPUTE=>GET_PERCENTAGE
        EXPORTING
          IV_ACT        = PA_INT1
          IV_MAX        = PA_INT2
        IMPORTING
          EV_PERCENTAGE = GV_RESULT.



*      CALL FUNCTION 'BC400_MOS_PERCENTAGE'
*        EXPORTING
*          IV_ACT           = PA_INT1
*          IV_MAX           = PA_INT2
*        IMPORTING
*          EV_PERCENTAGE    = GV_RESULT
*        EXCEPTIONS
*          DIVISION_BY_ZERO = 1
*          OTHERS           = 2.
*
*      IF SY-SUBRC <> 0.
*        WRITE 'Error in Function Module'.
*      ENDIF.

  ENDCASE.

  WRITE: 'Result:', GV_RESULT.

ELSEIF PA_OP = '/' AND PA_INT2 = 0.
  WRITE: 'No division by zero!'.

ELSE.
  WRITE: 'Invalid operator!'.

ENDIF.
